CREATE TABLE TBL_MEMBER(
	MEMBER_NAME VARCHAR2(1000),
	MEMBER_AGE NUMBER
);

SELECT * FROM TBL_MEMBER;

INSERT INTO TBL_MEMBER(MEMBER_NAME, MEMBER_AGE)
VALUES('홍길동', 20);

INSERT INTO TBL_MEMBER 
VALUES('강감찬', 25);

INSERT INTO TBL_MEMBER(MEMBER_NAME)
VALUES('김유신');

INSERT INTO TBL_MEMBER
(MEMBER_NAME, MEMBER_AGE)
VALUES('', 0);

--====================================================
-- UPDATE 
UPDATE TBL_MEMBER 
SET MEMBER_NAME = '장보고'
WHERE MEMBER_AGE = 20;

SELECT * FROM TBL_MEMBER;

-- DELETE 
DELETE FROM TBL_MEMBER 
WHERE MEMBER_NAME = '강감찬';

--====================================================
CREATE TABLE TBL_STUDENT(
	STUDENT_NUMBER NUMBER,
	STUDENT_NAME VARCHAR2(1000),
	STUDENT_MATH NUMBER,
	STUDENT_ENG NUMBER,
	STUDENT_KOR NUMBER,
	STUDENT_GRADE VARCHAR2(1000)
);

SELECT * FROM TBL_STUDENT;

/* [실습]
 * 학생 테이블에 데이터를 추가한다.
 * 학생번호, 이름, 수학, 영어, 국어
 * 1, '김철수', 90, 90, 90
 * 2, '홍길동', 70, 25, 55
 * 3, '이유리', 89, 91, 77
 * 4, '김웅이', 48, 100, 92
 * 5, '신짱구', 22, 13, 9
 * */

INSERT INTO TBL_STUDENT(STUDENT_NUMBER, STUDENT_NAME, STUDENT_MATH, STUDENT_ENG, STUDENT_KOR)
VALUES(1, '김철수', 90, 90, 90);
INSERT INTO TBL_STUDENT(STUDENT_NUMBER, STUDENT_NAME, STUDENT_MATH, STUDENT_ENG, STUDENT_KOR)
VALUES(2, '홍길동', 70, 25, 55);
INSERT INTO TBL_STUDENT(STUDENT_NUMBER, STUDENT_NAME, STUDENT_MATH, STUDENT_ENG, STUDENT_KOR)
VALUES(3, '이유리', 89, 91, 77);
INSERT INTO TBL_STUDENT(STUDENT_NUMBER, STUDENT_NAME, STUDENT_MATH, STUDENT_ENG, STUDENT_KOR)
VALUES(4, '김웅이', 48, 100, 92);
INSERT INTO TBL_STUDENT(STUDENT_NUMBER, STUDENT_NAME, STUDENT_MATH, STUDENT_ENG, STUDENT_KOR)
VALUES(5, '신짱구', 22, 13, 9);

SELECT STUDENT_NAME 이름, ROUND((STUDENT_MATH + STUDENT_ENG + STUDENT_KOR) / 3, 2) "평균 점수"
FROM TBL_STUDENT;

/* [실습]
 * 학생의 평균 점수를 구하고 학점을 수정하기
 * A : 90점 이상
 * B : 80점 이상 90점 미만
 * C : 50점 이상 80점 미만
 * F : 50점 미만
 * */

UPDATE TBL_STUDENT
SET STUDENT_GRADE = 'A'
WHERE ROUND((STUDENT_MATH + STUDENT_ENG + STUDENT_KOR) / 3, 2) >= 90;

UPDATE TBL_STUDENT
SET STUDENT_GRADE = 'B'
WHERE ROUND((STUDENT_MATH + STUDENT_ENG + STUDENT_KOR) / 3, 2) >= 80 AND ROUND((STUDENT_MATH + STUDENT_ENG + STUDENT_KOR) / 3, 2) < 90;

UPDATE TBL_STUDENT
SET STUDENT_GRADE = 'C'
WHERE ROUND((STUDENT_MATH + STUDENT_ENG + STUDENT_KOR) / 3, 2) < 80 AND ROUND((STUDENT_MATH + STUDENT_ENG + STUDENT_KOR) / 3, 2) >= 50;

UPDATE TBL_STUDENT
SET STUDENT_GRADE = 'F'
WHERE ROUND((STUDENT_MATH + STUDENT_ENG + STUDENT_KOR) / 3, 2) < 50;

/* [실습]
 * 학점이 잘 들어갔는지 확인하기 위해서
 * 학생 번호, 이름, 평균, 학점 조회하기 (별칭 넣어서)
 */
 
SELECT STUDENT_NUMBER "학생 번호",
	STUDENT_NAME 이름,
	ROUND((STUDENT_MATH + STUDENT_ENG + STUDENT_KOR) / 3, 2) "평균 점수",
	STUDENT_GRADE "학점"
FROM TBL_STUDENT;

/* [실습]
 * 학생의 수학, 영어, 국어 점수 중 한 과목이라도 50점 미만이 아니고
 * 학점이 B 이상인 학생만 학생 번호, 이름, 학점 출력하기
 */
 SELECT STUDENT_NUMBER "학생 번호",
 	STUDENT_NAME 이름,
 	STUDENT_GRADE 학점
 FROM TBL_STUDENT 
 WHERE NOT (STUDENT_MATH < 50 OR STUDENT_ENG < 50 OR STUDENT_KOR < 50) AND STUDENT_GRADE IN('A', 'B');
 
/* [실습] 
 * 학생의 수학, 영어, 국어 점수 중
 * 한 과목이라도 30점 미만이면 퇴학시키기(DB에서 삭제)
 */

DELETE FROM TBL_STUDENT
WHERE STUDENT_MATH < 30 OR STUDENT_ENG < 30 OR STUDENT_KOR < 30;

SELECT * FROM TBL_STUDENT;

--================================================================
-- DDL

CREATE TABLE TBL_USER(
	USER_NAME VARCHAR2(1000),
	USER_AGE NUMBER
);

-- 테이블명 수정
ALTER TABLE TBL_USER RENAME TO TBL_MY_USER;
-- 컬럼 추가
ALTER TABLE TBL_MY_USER ADD(USER_GENDER CHAR(4));
-- 컬럼명 수정
ALTER TABLE TBL_MY_USER RENAME COLUMN USER_NAME TO USER_NICKNAME;
-- 컬럼 삭제
ALTER TABLE TBL_MY_USER DROP COLUMN USER_GENDER;
-- 컬럼 타입 수정
ALTER TABLE TBL_MY_USER MODIFY(USER_NICKNAME VARCHAR2(500));

INSERT INTO TBL_MY_USER 
VALUES('A', 22);

INSERT INTO TBL_MY_USER 
VALUES('B', 25);

INSERT INTO TBL_MY_USER 
VALUES('C', 30);

SELECT * FROM TBL_MY_USER;
TRUNCATE TABLE TBL_MY_USER;

DROP TABLE TBL_MY_USER;

/* [실습]
 * 자동차 테이블 생성
 * - 자동차 번호
 * - 자동차 브랜드
 * - 출시 날짜
 * - 색상
 * - 가격
 * */

CREATE TABLE TBL_CAR(
	CAR_NUMBER NUMBER,
	CAR_BRAND VARCHAR2(1000),
	CAR_RELEASE_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER
);

ALTER TABLE TBL_CAR ADD CONSTRAINT PK_CAR PRIMARY KEY(CAR_NUMBER);
/* ALTER TABLE TBL_CAR : 테이블을 수정하겠다 TBL_CAR
 * ADD : 추가한다.
 * CONSTRAINT : 제약 조건
 * PK_CAR : 제약 조건 이름
 * PRIMARY KEY(CAR_NUMBER) : PK라는 제약조건을 (CAR_NUMBER) 컬럼에 
 * */

-- 제약조건 삭제
ALTER TABLE TBL_CAR DROP CONSTRAINT PK_CAR;

DROP TABLE TBL_CAR;

CREATE TABLE TBL_CAR(
	CAR_NUMBER NUMBER PRIMARY KEY,
	CAR_BRAND VARCHAR2(1000),
	CAR_RELEASE_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER
);

ALTER TABLE TBL_CAR DROP CONSTRAINT SYS_C007018;
DROP TABLE TBL_CAR;

CREATE TABLE TBL_CAR(
	CAR_NUMBER NUMBER CONSTRAINT PK_CAR PRIMARY KEY,
	CAR_BRAND VARCHAR2(1000),
	CAR_RELEASE_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER
);

/* [실습]
 * 동물 테이블
 * 고유 번호
 * 종류
 * 나이
 * 먹이
 */
-- 제약조건 추가(PK)
-- 제약조건 삭제(PK)
-- 컬럼 추가(성별)
-- 컬럼 이름 수정(고유 번호)
-- 컬럼 삭제(먹이)
-- 컬럼 수정(종류 컬럼을 다른 자료형으로)
-- 동물 테이블 삭제

CREATE TABLE TBL_ANIMAL(
	ANIMAL_NUMBER NUMBER,
	ANIMAL_KIND VARCHAR2(1000),
	ANIMAL_AGE NUMBER,
	ANIMAL_FEED VARCHAR2(1000)
);

ALTER TABLE TBL_ANIMAL ADD CONSTRAINT PK_ANIMAL PRIMARY KEY(ANIMAL_NUMBER);

ALTER TABLE TBL_ANIMAL DROP CONSTRAINT PK_ANIMAL;

ALTER TABLE TBL_ANIMAL ADD(ANIMAL_GENDER CHAR(4));

ALTER TABLE TBL_ANIMAL RENAME COLUMN ANIMAL_NUMBER TO ANIMAL_NUM;

ALTER TABLE TBL_ANIMAL DROP COLUMN ANIMAL_FEED;

ALTER TABLE TBL_ANIMAL MODIFY(ANIMAL_KIND NUMBER);

DROP TABLE TBL_ANIMAL;

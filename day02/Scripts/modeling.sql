 /*  TBL_USER
   -----------------------
   ID : NUMBER PRIMARY KEY
   -----------------------
   USER_ID : VARCHAR2(1000)
   USER_PW : VARCHAR2(1000)
   USER_ADDRESS : VARCHAR2(2000)
   USER_EMAIL : VARCHAR2(2000) : UNIQUE
   USER_BIRTH : DATE
   
 */
 
 CREATE TABLE TBL_USER(
 	ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
 	USER_ID VARCHAR2(1000) UNIQUE NOT NULL,
 	USER_PW VARCHAR2(1000) NOT NULL,
 	USER_ADDRESS VARCHAR2(1000),
 	USER_EMAIL VARCHAR2(1000) UNIQUE NOT NULL,
 	USER_BIRTH DATE
 );
 
CREATE TABLE TBL_PRODUCT(
	ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(1000) NOT NULL,
	PRODUCT_PRICE NUMBER DEFAULT 0,
	PRODUCT_STOCK NUMBER DEFAULT 0
);

CREATE TABLE TBL_ORDER(
	ID NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
	ORDER_DATE DATE DEFAULT CURRENT_TIMESTAMP,
	USER_ID NUMBER,
	PRODUCT_ID NUMBER,
	CONSTRAINT FK_ORDER_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID),
	CONSTRAINT FK_ORDER_PRODUCT FOREIGN KEY(PRODUCT_ID)
	REFERENCES TBL_PRODUCT(ID)
);

/*
 * 요구 사항
 * 
 * 커뮤니티 게시판을 만들고 싶어요.
 * 게시판에는 게시글 제목과 게시글 내용, 작성한 시간, 작성자가 있고,
 * 게시글에는 댓글이 있어서 댓글 내용들이 나와야 해요
 * 작성자는 회원(TBL_USER)정보를 그대로 사용해요.
 * 댓글에도 작성자가 필요해요.
 * 
 * */
CREATE TABLE TBL_POST(
	ID NUMBER CONSTRAINT PK_POST PRIMARY KEY,
	POST_TITLE VARCHAR2(1000) NOT NULL, 
	POST_CONTENT VARCHAR2(1000) NOT NULL,
	POST_CREATED_DATE DATE DEFAULT CURRENT_TIMESTAMP,
	USER_ID NUMBER,
	CONSTRAINT FK_POST_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID)
);

CREATE TABLE TBL_REPLY(
	ID NUMBER CONSTRAINT PK_REPLY PRIMARY KEY,
	REPLY_CONTENT VARCHAR2(1000) NOT NULL,
	USER_ID NUMBER,
	POST_ID NUMBER,
	CONSTRAINT FK_REPLY_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID),
	CONSTRAINT FK_REPLY_POST FOREIGN KEY(POST_ID)
	REFERENCES TBL_POST(ID)
);

/*
 * 요구사항
 * 
 * 마이페이지에서 회원 프로필을 구현하고 싶습니다.
 * 회원당 프로필을 여러 개 설정할 수 있고
 * 대표 이미지로 선택된 프로필만 화면에 보여주고 싶습니다.
 * 
 * 
 * */

CREATE TABLE TBL_FILE(
	ID NUMBER CONSTRAINT PK_FILE PRIMARY KEY,
	FILE_ORIGINAL_NAME VARCHAR2(1000) NOT NULL,
	FILE_SYSTEM_NAME VARCHAR2(1000) NOT NULL,
	FILE_REPRESENTATION VARCHAR2(100) DEFAULT 'NONE',
	USER_ID NUMBER,
	CONSTRAINT FK_FILE_USER FOREIGN KEY(USER_ID) 
	REFERENCES TBL_USER(ID)
);

DROP TABLE TBL_STUDENT;
/*
   1.학사 관리 시스템에서 학생과 교수가 존재
   2.학생은 학번, 이름, 전공, 학년 등
   3.교수는 교수 번호, 이름, 전공, 직위 등
   4.과목은 고유한 과목 번호, 과목명, 학점 등
   6.학생은 여러 개의 과목을 수강가능
   7.교수는 여러 개의 과목을 강의가능
   8.학생이 수강한 과목은 성적이 기록됩니다. 
*/

CREATE TABLE TBL_STUDENT(
	ID NUMBER CONSTRAINT PK_STUDENT PRIMARY KEY,
	STUDENT_NAME VARCHAR2(1000) NOT NULL,
	STUDENT_MAJOR VARCHAR2(1000) NOT NULL,
	STUDENT_GRADE NUMBER DEFAULT 1
);

CREATE TABLE TBL_PROFESSOR(
	ID NUMBER CONSTRAINT PK_PROFESSOR PRIMARY KEY,
	PROFESSOR_NAME VARCHAR2(1000) NOT NULL,
	PROFESSOR_MAJOR VARCHAR2(1000) NOT NULL,
	PROFESSOR_POSITION VARCHAR2(1000) NOT NULL
);

CREATE TABLE TBL_SUBJECT(
	ID NUMBER CONSTRAINT PK_SUBJECT PRIMARY KEY,
	SUBJECT_NAME VARCHAR2(1000) NOT NULL,
	SUBJECT_SCORE NUMBER DEFAULT 0
);

CREATE TABLE TBL_STUDENT_SUBJECT(
	ID NUMBER CONSTRAINT PK_STUDENT_SUBJECT PRIMARY KEY,
	SUBJECT_GRADE VARCHAR2(1000),
	SUBJECT_STATUS VARCHAR2(1000) DEFAULT 'PROGRESSING',
	STUDENT_ID NUMBER,
	SUBJECT_ID NUMBER,
	CONSTRAINT FK_STUDENT_SUBJECT_STUDENT FOREIGN KEY(STUDENT_ID)
	REFERENCES TBL_STUDENT(ID),
	CONSTRAINT FK_STUDENT_SUBJECT_SUBJECT FOREIGN KEY(SUBJECT_ID)
	REFERENCES TBL_SUBJECT(ID)
);

CREATE TABLE TBL_LECTURE(
	ID NUMBER CONSTRAINT PK_LECTURE PRIMARY KEY,
	PROFESSOR_ID NUMBER,
	SUBJECT_ID NUMBER,
	CONSTRAINT FK_LECTURE_PROFESSOR FOREIGN KEY(PROFESSOR_ID)
	REFERENCES TBL_PROFESSOR(ID),
	CONSTRAINT FK_LECTURE_SUBJECT FOREIGN KEY(SUBJECT_ID)
	REFERENCES TBL_SUBJECT(ID)
);

/*
 * 요구사항
 * 
 * 대 카테고리, 소 카테고리가 필요해요.
 * 
 * */

CREATE TABLE TBL_CATEGORY_A(
	ID NUMBER CONSTRAINT PK_CATEGORY_A PRIMARY KEY,
	CATEGORY_A_NAME VARCHAR2(1000)
);

CREATE TABLE TBL_CATEGORY_B(
	ID NUMBER CONSTRAINT PK_CATEGORY_B PRIMARY KEY,
	CATEGORY_B_NAME VARCHAR2(1000),
	CATEGORY_A_ID NUMBER,
	CONSTRAINT FK_CATEGORY_B_CATEGORY_A FOREIGN KEY(CATEGORY_A_ID)
	REFERENCES TBL_CATEGORY_A(ID)
);

/*
 * 요구 사항
 * 
 * 회의실 예약 서비스를 제작하고 싶습니다.
 * 회원별로 등급이 존재하고 사무실마다 회의실이 여러 개 있습니다.
 * 회의실 이용 가능 시간은 파트 타임으로서 여러 시간대가 존재합니다.
 * 
 * */

CREATE TABLE TBL_MEMBER(
	ID NUMBER CONSTRAINT PK_MEMBER PRIMARY KEY,
	MEMBER_ID VARCHAR2(1000) UNIQUE NOT NULL,
	MEMBER_PASSWORD VARCHAR2(1000) NOT NULL,
	MEMBER_NAME VARCHAR2(1000) NOT NULL
);

ALTER TABLE TBL_MEMBER ADD MEMBER_LEVEL VARCHAR2(1000) DEFAULT 'BASIC';

CREATE TABLE TBL_OFFICE(
	ID NUMBER CONSTRAINT PK_OFFICE PRIMARY KEY,
	OFFICE_NAME VARCHAR2(1000) NOT NULL,
	OFFICE_LOCATION VARCHAR2(1000) NOT NULL
);

CREATE TABLE TBL_CONFERENCE_ROOM(
	ID NUMBER CONSTRAINT PK_CONFERENCE_ROOM PRIMARY KEY,
	OFFICE_ID NUMBER,
	CONSTRAINT CONFERENCE_ROOM_OFFICE FOREIGN KEY(OFFICE_ID)
	REFERENCES TBL_OFFICE(ID)
);

CREATE TABLE TBL_PART_TIME(
	ID NUMBER CONSTRAINT PK_PART_TIME PRIMARY KEY,
	CONFERENCE_ROOM_ID NUMBER,
	CONSTRAINT PART_TIME_CONFERENCE_ROOM FOREIGN KEY(CONFERENCE_ROOM_ID)
	REFERENCES TBL_CONFERENCE_ROOM(ID)
);

ALTER TABLE TBL_PART_TIME ADD START_DATE DATE;
ALTER TABLE TBL_PART_TIME ADD END_DATE DATE;

CREATE TABLE TBL_RESERVATION(
	ID NUMBER CONSTRAINT PK_RESERVATION PRIMARY KEY,
	MEMBER_ID NUMBER,
	CONFERENCE_ROOM_ID NUMBER,
	CONSTRAINT RESERVATION_MEMBER FOREIGN KEY(MEMBER_ID)
	REFERENCES TBL_MEMBER(ID),
	CONSTRAINT RESERVATION_CONFERENCE_ROOM FOREIGN KEY(CONFERENCE_ROOM_ID)
	REFERENCES TBL_CONFERENCE_ROOM(ID)
);

/*

요구사항

유치원을 하려고 하는데, 아이들이 체험학습 프로그램을 신청해야 합니다.
아이들 정보는 이름, 나이, 성별이 필요하고 학부모는 이름, 나이, 주소, 전화번호, 성별이 필요해요
체험학습은 체험학습 제목, 체험학습 내용, 이벤트 이미지 여러 장이 필요합니다.
아이들은 여러 번 체험학습에 등록할 수 있어요.

*/

CREATE TABLE TBL_PARENT(
	ID NUMBER CONSTRAINT PK_PARENT PRIMARY KEY,
	PARENT_NAME VARCHAR2(1000) NOT NULL,
	PARENT_AGE NUMBER,
	PARENT_ADDRESS VARCHAR2(1000) NOT NULL,
	PARENT_PHONE VARCHAR2(1000) NOT NULL UNIQUE,
	PARENT_GENDER VARCHAR2(1000) NOT NULL
);

CREATE TABLE TBL_CHILD(
	ID NUMBER CONSTRAINT PK_CHILD PRIMARY KEY,
	CHILD_NAME VARCHAR2(1000) NOT NULL,
	CHILD_AGE NUMBER,
	CHILD_GENDER VARCHAR2(1000) NOT NULL,
	PARENT_ID NUMBER,
	CONSTRAINT FK_CHILD_PARENT FOREIGN KEY(PARENT_ID)
	REFERENCES TBL_PARENT(ID)
);

CREATE TABLE TBL_FIELD_TRIP(
	ID NUMBER CONSTRAINT PK_FIELD_TRIP PRIMARY KEY,
	FIELD_TRIP_TITLE VARCHAR2(1000),
	FIELD_TRIP_CONTENT VARCHAR2(1000),
	FIELD_TRIP_NUMBER NUMBER
);

CREATE TABLE TBL_FIELD_TRIP_FILE(
	ID NUMBER CONSTRAINT PK_FIELD_TRIP_FILE PRIMARY KEY,
	FILE_ORIGINAL_NAME VARCHAR2(1000) NOT NULL,
	FILE_SYSTEM_NAME VARCHAR2(1000) NOT NULL,
	FILE_POSITION VARCHAR2(100),
	FIELD_TRIP_ID NUMBER,
	CONSTRAINT FK_FIELD_TRIP_FILE_FIELD_TRIP FOREIGN KEY(FIELD_TRIP_ID)
	REFERENCES TBL_FIELD_TRIP(ID)
);

CREATE TABLE TBL_APPLY(
	ID NUMBER CONSTRAINT PK_APPLY PRIMARY KEY,
	CHILD_ID NUMBER,
	FIELD_TRIP_ID NUMBER,
	CONSTRAINT FK_APPLY_CHILD FOREIGN KEY(CHILD_ID)
	REFERENCES TBL_CHILD(ID),
	CONSTRAINT FK_APPLY_FIELD_TRIP FOREIGN KEY(FIELD_TRIP_ID)
	REFERENCES TBL_FIELD_TRIP(ID)
);
/*

요구사항

안녕하세요, 광고 회사를 운영하려고 준비중인 사업가입니다.
광고주는 기업이고 기업 정보는 이름, 주소, 대표번호, 기업종류(스타트업, 중소기업, 중견기업, 대기업)입니다.
광고는 제목, 내용이 있고 기업은 여러 광고를 신청할 수 있습니다.
기업이 광고를 선택할 때에는 카테고리로 선택하며, 대카테고리, 중카테고리, 소카테고리가 있습니다.

*/

/*

요구사항

음료수 판매 업체입니다. 음료수마다 당첨번호가 있습니다. 
음료수의 당첨번호는 1개이고 당첨자의 정보를 알아야 상품을 배송할 수 있습니다.
당첨 번호마다 당첨 상품이 있고, 당첨 상품이 배송 중인지 배송 완료인지 구분해야 합니다.

*/

/*

요구사항

이커머스 창업 준비중입니다. 기업과 사용자 간 거래를 위해 기업의 정보와 사용자 정보가 필요합니다.
기업의 정보는 기업 이름, 주소, 대표번호가 있고
사용자 정보는 이름, 주소, 전화번호가 있습니다. 결제 시 사용자 정보와 기업의 정보, 결제한 카드의 정보 모두 필요하며,
상품의 정보도 필요합니다. 상품의 정보는 이름, 가격, 재고입니다.
사용자는 등록한 카드의 정보를 저장할 수 있으며, 카드의 정보는 카드번호, 카드사, 회원 정보가 필요합니다.

*/

